pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/smmnloes/pyMDB.git'
            }
        }

        stage('Tests') {
            steps{
                dir('py-backend'){
                    sh 'pipenv install --dev'
                    sh 'pipenv run pytest'
                }
            }
        }


        stage('Deploy Backend'){
            steps{
                // Inject the TMDB Api Key and the app key into config.ini
                withCredentials([string(credentialsId: 'tmdb_api_key', variable: 'TMDB_KEY'), string(credentialsId: 'app_key', variable: 'APP_KEY')]) {
                    sh "sed -i 's/^TMDB_API_KEY.*/TMDB_API_KEY = $TMDB_KEY/g' ./py-backend/main/services/config/config.ini"
                    sh "sed -i 's/^APP_KEY.*/APP_KEY = $APP_KEY/g' ./py-backend/main/services/config/config.ini"
                }

                // Stop the service
                sh 'ssh ubuntu@3.126.86.224 sudo systemctl stop py-backend'

                // Delete old folder
                sh 'ssh ubuntu@3.126.86.224 rm -rf /var/lib/pymdb/py-backend'

                // Copy new folder
                sh 'scp -r ./py-backend ubuntu@3.126.86.224:/var/lib/pymdb'

                // Set restrictive permissions on config-file to protect secrets
                sh 'ssh ubuntu@3.126.86.224 "chmod 600 /var/lib/pymdb/py-backend/main/services/config/config.ini"'

                // execute pipenv clean & install
                sh 'ssh ubuntu@3.126.86.224 "cd /var/lib/pymdb/py-backend && /home/ubuntu/.local/bin/pipenv clean && /home/ubuntu/.local/bin/pipenv install"'

                // initialize the user database if it doesn't exist yet
                sh 'ssh ubuntu@3.126.86.224 "cd /var/lib/pymdb/py-backend && /home/ubuntu/.local/bin/pipenv run python3 ./main/manage.py init_user_db"'

                // Start the service
                sh 'ssh ubuntu@3.126.86.224 sudo systemctl start py-backend'
            }
        }
    }
}
